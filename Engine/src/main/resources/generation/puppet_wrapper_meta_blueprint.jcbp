/*
 *  Copyright (c) 2021. Linkit and or its affiliates. All rights reserved.
 *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 *  This code is free software; you can only use it for personal uses, studies or documentation.
 *  You can download this source code, and modify it ONLY FOR PERSONAL USE and you
 *  ARE NOT ALLOWED to distribute your MODIFIED VERSION.
 *
 *  Please contact maximebatista18@gmail.com if you need additional information or have any
 *  questions.
 */

package gen.$WrappedClassPackage$;

import $WrappedClassName$;
import gen.$WrappedClassPackage$.Puppet$WrappedClassSimpleName$;
import fr.linkit.api.local.system.AppLogger;
import static fr.linkit.engine.local.utils.JavaUtils.nl;

import java.util.Arrays;

/*
 * This class overrides every scala's setters, getters and other scalac's meta stuff
 * because this is impossible to override them from scala language.
 */
abstract class Meta$WrappedClassSimpleName$$TParamsIn$ extends Puppet$WrappedClassSimpleName$$TParamsOut$ {

!!INHERITED_META!! {
    @Override
    public $GenericTypes$ $ReturnType$ $MethodName$($ParamsIn$) {
        $|If ReturnType == "void"|$ {
                handleCall($MethodID$, $DefaultReturnType$, $InvokeOnlyResult$, new Object[]{$ParamsOut$}, () -> super.$MethodName$($ParamsOut$));
        } $|Else|$ {
            return handleCall($MethodID$, $DefaultReturnType$, $InvokeOnlyResult$, new Object[]{$ParamsOut$}, () -> super.$MethodName$($ParamsOut$));
        }
    }
}
}