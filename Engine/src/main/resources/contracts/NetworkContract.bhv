name "NetworkContract"
import fr.linkit.api.gnom.**
import fr.linkit.engine.gnom.**
import fr.linkit.engine.internal.mapping.*
import java.nio.file.Path
import java.net.URI

agreement current_and_origin = discard * -> accept current and owner -> appoint current
agreement broadcast_appoint_owner = accept * -> appoint owner

describe EngineImpl {
    addTag(EngineTag)    => everyone ; broadcast
    removeTag(EngineTag) => everyone ; broadcast
}
describe NetworkDataTrunk {
    staticAccesses() {
        sync returnvalue
    }
    newEngine(String) => anyone ; accept * -> appoint owner
    addEngine(sync DefaultEngine) //protected method
}

describe StaticAccesses {
    newStaticAccess0(int, ContractDescriptorData) following broadcast
}

describe RemoteClassMappings {
    ensinv addClassToMap(String) => anyone ; only_owner
    onClassMapped(int)           => anyone ; broadcast
    requestClassName(int)        => anyone ; only_owner
}