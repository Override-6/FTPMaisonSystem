import fr.linkit.api.gnom.cache.SharedCacheManager
import fr.linkit.engine.gnom.network.DefaultEngine
import fr.linkit.api.gnom.network.Network

scala ${
    val network = Â£{@network: Network}
}

describe class DefaultEngine [full_remote] {
    enable method updateState(synchronize ExternalConnectionState, String, synchronize Int) as broadcast_if_root_owner {
        modifier 1 & 2 {
            current_to_distant -> ${(x, engine) => x}
        }
    }
    hide method test(x, y) "WAW"
}

modifier SharedCacheManager {
    current_to_distant -> ${(param, _) => param match {
            case origin: SharedCacheOriginManager => {transformToDistant(origin)}
            case _                                => {param}
    }}
}
modifier DefaultEngine {
    current_to_distant -> ${(e, _) => {
       new DefaultEngine(e.identifier, network.findCacheManager(identifier).get)
   }}
}