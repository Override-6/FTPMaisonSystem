name "NetworkContract"
import fr.linkit.api.gnom.**
import fr.linkit.engine.gnom.**
import fr.linkit.engine.internal.mapping.*
import java.nio.file.Path
import java.net.URI

agreement current_and_origin = discard * -> accept current and owner -> appoint current
agreement broadcast_appoint_owner = accept * -> appoint owner

describe DefaultEngine {
    updateState(ExternalConnectionState) following current_and_origin
}
describe NetworkDataTrunk {
    staticAccesses() {
        sync returnvalue
    }
    newEngine(String) following broadcast_appoint_owner
    addEngine(sync DefaultEngine) //protected method
}

describe StaticAccesses {
    newStaticAccess0(int, ContractDescriptorData) following broadcast
}

describe RemoteClassMappings {
    ensinv addClassToMap(String) following only_owner
    onClassMapped(int) following broadcast
    requestClassName(int) following only_owner
}