/*
 * Copyright (c) 2021. Linkit and or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR FILE HEADERS.
 *
 * This code is free software; you can only use it for personal uses, studies or documentation.
 * You can download this source code, and modify it ONLY FOR PERSONAL USE and you
 * ARE NOT ALLOWED to distribute your MODIFIED VERSION.
 * For any professional use, please contact me at overridelinkit@gmail.com.
 *
 * Please contact overridelinkit@gmail.com if you need additional information or have any
 * questions.
 */

plugins {
    id 'java-library'
    id 'scala'
    id 'maven-publish'
}

println("Java JDK: " + System.getProperty("java.version"))

group 'fr.linkit'
version 'alpha-0.0.0'

def frameworkModules = [":Engine", ":API", ":Server", ":Client"]

task generateScaladocs(type: ScalaDoc, description: 'Generate scaladocs from listed sub projects as if it were a single project', group: 'Documentation') {
    destinationDir = file("$buildDir/docs/scaladoc")
    title = "$project.name documentation"
    classpath = project.files([])
    scalaClasspath = project.files([])

    frameworkModules.collect { project(it) }.each { proj ->
        proj.tasks.withType(ScalaDoc).each {
            source proj.sourceSets.main.allJava
            source proj.sourceSets.main.allScala
            classpath += proj.scaladoc.classpath
            scalaClasspath += proj.scaladoc.scalaClasspath
            exclude proj.scaladoc.excludes
            include proj.scaladoc.includes
        }
    }
}


subprojects {
    group = "fr.linkit"
    version = "alpha-0.0.0"

    apply plugin: 'java-library'
    apply plugin: 'scala'
    apply plugin: 'maven-publish'

    publishing {
        publications {
            maven(MavenPublication) {
                afterEvaluate {
                    artifactId = project.name.toLowerCase()
                    from project.components.java
                }
                repositories {
                    maven {
                        url = "https://maven.pkg.github.com/Override-6/Linkit"
                        credentials {
                            username = "Override-6"
                            password = System.getenv("PACKAGES_DEPLOY_PAT")
                        }
                    }
                }
            }
        }
    }
    repositories {
        mavenCentral()
    }

    dependencies {
        implementation group: 'org.scala-lang', name: 'scala-library', version: '2.13.7'
        implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
        implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    }

    task dist(type: Jar, dependsOn: configurations.runtimeClasspath) {
        from files(sourceSets.main.output.classesDirs)
        from files(sourceSets.main.output.resourcesDir)
        from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        archiveFileName = "${project.name}-$project.version"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    test {
        useJUnitPlatform()
    }


    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = [
                "-feature",
                "-language:implicitConversions",
                "-language:experimental.macros"
        ]
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = '19'
        targetCompatibility = '19'
    }
}

wrapper {
    gradleVersion = "7.5.1"
    distributionType = Wrapper.DistributionType.ALL
}
